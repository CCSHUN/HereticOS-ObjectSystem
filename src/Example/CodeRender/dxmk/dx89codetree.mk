NULL_FALSE<NULL_FALSE>=NULL_FALSE
	NULL_TRUE<NULL_TRUE>=NULL_TRUE

	ROOT<类声明>=类声明
	逗号分隔符<逗号分隔符>=WORD(,)
	类声明<类声明>=类声明1|类声明2|类声明3
	类声明1<类声明>=类头关键词+WORD(()+类名+WORD(,)+继承基类名+WORD())+包<类声明包开始,类声明包结束,类声明体>
	类声明包开始<类声明包开始>=WORD({)
	类声明包结束<类声明包结束>=WORD(})+WORD(;)
	类头关键词<类头关键词>=WORD(DECLARE_INTERFACE_)
	类声明2<类声明>=NULL_FALSE
	类声明3<类声明>=NULL_FALSE

	类名<类名>=词型
	基类名<基类名>=词型
	继承基类名<基类名>=基类名


	类声明包开始<类声明包开始>=word({)
	类声明包结束<类声明包结束>=word(})+word(;)

	类声明体<类声明体>=N<类声明体内容,NULL_TRUE>|NULL_TRUE

	类声明体内容<类声明体内容>=类声明体内容5|类声明体内容6

	类声明体内容5<类声明体内容>=函数声明|函数定义
	类声明体内容6<类声明体内容>=变量声明|变量声明表


	函数定义<函数定义>=NULL_FALSE
	函数声明<函数声明>=函数声明1|函数声明2

	函数声明1<函数声明>=WORD(STDMETHOD)+WORD(()+函数名+WORD())+函数参数声明
	函数声明2<函数声明>=WORD(STDMETHOD_)+WORD(()+函数返回类型+WORD(,)+函数名+WORD())+函数参数声明
	函数返回类型<函数返回类型>=参数类型
	
	函数后缀<前缀>=WORD(PURE)
	函数参数前缀1<前缀>=WORD(THIS)|WORD(THIS_)
	函数参数前缀<前缀>=N<函数参数前缀1,NULL_TRUE>
	
	函数参数声明<函数参数声明>=包<函数声明包开始,函数声明包结束,函数声明参数表>|空参数声明
	空参数声明<函数参数声明>=WORD(()+WORD())+WORD(;)
	//无返回参数函数声明<函数声明>=NULL<函数调用约定>|函数名+函数参数声明

	函数名<函数名>=词型
	函数声明包开始<函数声明包开始>=WORD(()
	函数声明包结束<函数声明包结束>=WORD())+NULL<函数后缀>+WORD(;)
	函数声明参数表<函数参数声明>=N<函数声明参数声明,逗号分隔符>|函数参数前缀
	函数声明参数声明<函数声明参数声明>=参数类型+参数名称
	参数类型<参数类型>=NULL<函数参数前缀>|CONST指针指针型参数|CONST指针型参数|CONST引用型参数|CONST对象型参数|指针指针型参数|指针型参数|引用型参数|对象型参数
	
	CONST对象型参数<参数类型>=WORD(CONST)+词型
	CONST指针型参数<参数类型>=WORD(CONST)+词型+WORD(*)
	CONST指针指针型参数<参数类型>=WORD(CONST)+词型+WORD(*)+WORD(*)
	CONST引用型参数<参数类型>=WORD(CONST)+词型+WORD(&)
	
	对象型参数<参数类型>=词型
	指针型参数<参数类型>=词型+WORD(*)
	指针指针型参数<参数类型>=词型+WORD(*)+WORD(*)
	引用型参数<参数类型>=词型+WORD(&)
	
	//参数名有可能为空哦
	空参数名称<参数名称>=NULL_TRUE
	参数名称<参数名称>=词型|空参数名称

	变量声明<变量声明>=变量类型+变量名称+word(;)
	变量类型<变量类型>=词型
	变量名称<变量声明>=词型

	变量声明表<变量声明表>=变量类型+N<变量声明表单元变量声明,逗号分隔符>+word(;)
	变量声明表单元变量声明<变量声明表单元变量声明>=变量名称
	
	